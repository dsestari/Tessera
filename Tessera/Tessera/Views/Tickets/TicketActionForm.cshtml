@model Tessera.ViewModels.TicketFormViewModel

@{
    ViewBag.Title = "TicketActionForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

@*Select analyst after group*@
<script language="javascript" type="text/javascript">

    function GetUsers(_groupId) {

        var procemessage = "<option value='0'> Please wait...</option>";

        $("#ddlAnalyst").html(procemessage).show();
        var url = "/Tickets/GetUsersByGroup/";

        $.ajax({
            url: url,
            data: { groupId: _groupId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select Analyst</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#ddlAnalyst").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }

    function GetAttachId(_attachId) {

        var url = "/Tickets/RemoveAttach/";

        $.ajax({
            type: "POST",
            url: url,
            cache: false,
            data: { attachId: _attachId },
            success: function () {
                location.reload();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        })
    }

</script>

<style>
    
    a.RemoveAttach {
        margin-left: 15px;
        color: red;
        font-weight: bold;
        text-decoration: none;
    }

</style>

<h2>Ticket #@Html.DisplayFor(m => m.Ticket.Id)</h2>

<br />

@using (Html.BeginForm("Keep", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group row">
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.TicketActionId)
            @Html.DropDownListFor(m => m.Ticket.TicketActionId, new SelectList(Model.TicketActions, "Id", "Name"), new { id = "ddlAction", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Ticket.TicketActionId)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.GroupId)
            @Html.DropDownListFor(m => m.Ticket.GroupId, new SelectList(Model.Groups, "Id", "Name"), new { id = "ddlGroup", @class = "form-control", @onchange = "javascript:GetUsers(this.value);" })
            @Html.ValidationMessageFor(m => m.Ticket.GroupId)
        </div>
        <div class="col-lg-3">
            @Html.Label("Analyst")
            @Html.DropDownListFor(m => m.Ticket.UserId, new SelectList(Model.Users, "Id", "Name"), new { id = "ddlAnalyst", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Ticket.UserId)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.OpeningDate)
            @Html.TextBoxFor(m => m.Ticket.OpeningDate, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.OpeningDate)
        </div>
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.PriorityId)
            @Html.DropDownListFor(m => m.Ticket.PriorityId, new SelectList(Model.Priorities, "Id", "Name"), new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.PriorityId)
        </div>
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.DueDate)
            @Html.TextBoxFor(m => m.Ticket.DueDate, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.DueDate)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.UserName)
            @Html.TextBoxFor(m => m.Ticket.UserName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.UserName)
        </div>
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.UserMail)
            @Html.TextBoxFor(m => m.Ticket.UserMail, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.UserMail)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.UserPhone)
            @Html.TextBoxFor(m => m.Ticket.UserPhone, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.UserPhone)
        </div>
        <div class="col-lg-3">
            @Html.LabelFor(m => m.Ticket.Address)
            @Html.TextBoxFor(m => m.Ticket.Address, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.Address)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12">
            @Html.LabelFor(m => m.Ticket.Summary)
            @Html.TextBoxFor(m => m.Ticket.Summary, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.Summary)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12">
            @Html.LabelFor(m => m.Ticket.Description)
            @Html.TextAreaFor(m => m.Ticket.Description, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Ticket.Description)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12">
            @Html.Label("Attachment")
            @Html.TextBoxFor(m => m.Files, new { @type = "file", @name = "files", @multiple = "multiple", id = "fileUpload" })
        </div>
    </div>
    if (@Model.Attachments != null)
    {
        <div class="form-group row">
            <div class="col-lg-12">
                @Html.Label("Attachments")
                <br />
                @foreach (var item in @Model.Attachments)
                {
                    <ul style="display:inline; list-style-type: none;">
                        @if (item.Extension.ToLower() == ".jpg")
                        {
                            <li>
                                <a href="@Url.Content(item.Path)" title="@item.FileName">
                                    <img alt="List View" src="@Url.Content("~/Content/TmpTicketFiles/TmpAttachIcons/jpg-icon.png")" style="width: 4%;">
                                    @item.FileName
                                </a>
                                @Html.ActionLink("X", "RemoveAttach", null, new { @class = "RemoveAttach", id = item.Id, onclick = "javascript:GetAttachId(" + item.Id + ");" })
                            </li>
                        }
                        else if (item.Extension.ToLower() == ".docx")
                        {
                            <li>
                                <a href="@Url.Content(item.Path)" title="@item.FileName">
                                    <img alt="List View" src="@Url.Content("~/Content/TmpTicketFiles/TmpAttachIcons/doc-icon.png")" style="width: 4%;">
                                    @item.FileName
                                </a>
                                @Html.ActionLink("X", "RemoveAttach", null, new { @class = "RemoveAttach", id = item.Id, onclick = "javascript:GetAttachId(" + item.Id + ");" })
                            </li>
                        }
                        else if (item.Extension.ToLower() == ".pdf")
                        {
                            <li>
                                <a href="@Url.Content(item.Path)" title="@item.FileName">
                                    <img alt="List View" src="@Url.Content("~/Content/TmpTicketFiles/TmpAttachIcons/pdf-icon.png")" style="width: 4%;">
                                    @item.FileName
                                </a>
                                @Html.ActionLink("X", "RemoveAttach", null, new { @class = "RemoveAttach", id = item.Id, onclick = "javascript:GetAttachId(" + item.Id + ");" })
                            </li>
                        }
                        else if (item.Extension.ToLower() == ".txt")
                        {
                            <li>
                                <a href="@Url.Content(item.Path)" title="@item.FileName">
                                    <img alt="List View" src="@Url.Content("~/Content/TmpTicketFiles/TmpAttachIcons/txt-icon.png")" style="width: 4%;">
                                    @item.FileName
                                </a>
                                @Html.ActionLink("X", "RemoveAttach", null, new { @class = "RemoveAttach", id = item.Id, onclick = "javascript:GetAttachId(" + item.Id + ");" })
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.Content(item.Path)" title="@item.FileName">
                                    <img alt="List View" src="@Url.Content("~/Content/TmpTicketFiles/TmpAttachIcons/file-icon.png")" style="width: 4%;">
                                    @item.FileName
                                </a>
                                @Html.ActionLink("X", "RemoveAttach", null, new { @class = "RemoveAttach", id = item.Id, onclick = "javascript:GetAttachId(" + item.Id + ");" })
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    }   
    <input type="hidden" value="@Model.Ticket.Id" name="Id" />
    @Html.HiddenFor(m => m.Ticket.TicketStatusId)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Done</button>
}

@section scripts{
    @Scripts.Render("~/Scripts/jquery-3.1.1.js")
    @Scripts.Render("~/Scripts/jquery.validate.min.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
    @Scripts.Render("~/Scripts/moment.js")
    @Scripts.Render("~/bundles/jqueryval")

    @*FileUpload Section*@
    <script type="text/javascript">
        $(function () {
            $('#fileUpload').fileupload({
                dataType: 'json',
                done: function (e, data) {
                    $.each(data.result.files, function (index, file) {
                        $('<p/>').text(file.name).appendTo(document.body);
                    });
                }
            });
        });

        $(document).ready(
             $.validator.methods.date = function (value, element) {
                 return this.optional(element) || moment(value, "DD/MM/YYYY h:m:s A", true).isValid();
             })

    </script>
}
